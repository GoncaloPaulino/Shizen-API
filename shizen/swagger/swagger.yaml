openapi: 3.0.0
info:
  title: Shizen API
  description: Shizen
  contact:
    email: grpaulino8@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: http://localhost:8080
  description: Shizen Server
paths:
  /flowers:
    get:
      description: Returns every flower in the database.
      operationId: get_all_flower
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Flor'
                x-content-type: application/json
        "401":
          description: error
      x-openapi-router-controller: shizen.controllers.default_controller
  /flower/{idx}:
    get:
      description: Returns info about a specific flower.
      operationId: get_flower
      parameters:
      - name: idx
        in: path
        description: The flower ID
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: integer
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flor'
        "401":
          description: error
      x-openapi-router-controller: shizen.controllers.default_controller
  /recognize:
    post:
      description: Recognizes which flower is in a specific image.
      operationId: recognize
      requestBody:
        content:
          image/png:
            schema:
              type: string
              format: binary
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flor'
        "401":
          description: error
        "402":
          description: flower not found
      x-openapi-router-controller: shizen.controllers.default_controller
components:
  schemas:
    Flor:
      required:
      - classifiable
      - common_name
      - description
      - idx
      - label_name
      - max_height
      - min_height
      - more_info
      - native
      - scientific_name
      type: object
      properties:
        idx:
          type: integer
          example: 0
        common_name:
          type: string
          example: Flor
        scientific_name:
          type: string
          example: Florus
        label_name:
          type: string
          example: flor
        description:
          type: string
          example: Isto é uma flor.
        min_height:
          type: number
          format: double
          example: 50
        max_height:
          type: number
          format: double
          example: 500
        more_info:
          type: string
          example: https://pt.wikipedia.org/wiki/Flor
      example:
        min_height: 50
        description: Isto é uma flor.
        more_info: https://pt.wikipedia.org/wiki/Flor
        scientific_name: Florus
        max_height: 500
        idx: 0
        common_name: Flor
        label_name: flor

